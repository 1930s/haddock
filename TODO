For 1.0:

* parse module headers, augment Interface with info from header

* IDoc compatibility, as far as possible
	- bird-tracks for code blocks

* named chunks of documentation?

* Do the unlitting/CPPing from Haddock itself

* facilities for saving interfaces so that you can run Haddock against
  something that isn't the Prelude.

-----------------------------------------------------------------------------
Post 1.0:

* remove extra whitespace from the generated HTML to save space

* To clean up: various warnings are emitted with trace rather than
  being propagated back to the top level properly.

* split large modules into several pages (perhaps split at each
  section 1 heading?)

* pay attention to import specs!

* instances: list relevant instances in the documentation for classes and
  datatypes.

* include file revision info in module headers

* Allow fully hiding modules from the output

* Add a link to the defining location of a re-exported entity

* fixities

* we don't deal with records properly - exporting record selectors etc.

* doc strings for: function arguments

* remove the s/r conflicts I added to the grammar

* check handling of special types ([], (), (,) etc.)

* Horizontal lines?

* enhance the doc string parser:
	* @...@ for monospaced text
	* an apostrophe inside a string shouldn't be considered to be a quote

* Do proper dependency analysis rather than relying on laziness to
  sort it out.

* clean up the layout: don't use table cellspacing, use CSS instead
